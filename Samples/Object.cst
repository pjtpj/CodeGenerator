<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="Object.cst.cs" Inherits="ObjectTemplate" Description="Generates an example of a class derived from a class generated by ObjectBase.cst." %>
<%@ Property Name="SourceTable" Type="DatabaseSchema.Table" Category="Context" Description="Table that the object is based on." %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="DatabaseSchema" %>
<%@ Import Namespace="System.Data" %>
<%-- 
	Run with this command: 
	
		CodeGenerator /batch:Object.xml
--%>
using System;
using System.Data;
using System.Collections;

/*
 * Derived classes are used to customize the classes generated by ObjectBase.cst.
 * The constructors for the derived classes are generated into this file as an example.
 * Use copy and paste to move the generated constructors into your own code files.
 * This is done to prevent the code generator from overwriting customizations.
 */
  
namespace Database
{
	/// <summary>
	/// This object represents the properties and methods of a <%= GetClassName(SourceTable) %>.
	/// </summary>
	[Serializable]
	public class <%= GetClassName(SourceTable) %>
	:	<%= GetClassName(SourceTable) %>Base
	{
		public <%= GetClassName(SourceTable) %>() 
		:	base()
		{
		}
		
		public <%= GetClassName(SourceTable) %>(<% for (int i = 0; i < SourceTable.PrimaryKey.MemberColumns.Count; i++) { %><%= GetCSharpType(SourceTable.PrimaryKey.MemberColumns[i]) %> <%= GetLocalVariableName(SourceTable.PrimaryKey.MemberColumns[i]) %><% if (i < SourceTable.PrimaryKey.MemberColumns.Count - 1) { %>, <% } %><% } %>)
		:	base(<% for (int i = 0; i < SourceTable.PrimaryKey.MemberColumns.Count; i++) { %><%= GetLocalVariableName(SourceTable.PrimaryKey.MemberColumns[i]) %><% if (i < SourceTable.PrimaryKey.MemberColumns.Count - 1) { %>, <% } %><% } %>)
		{
		}
		
		public <%= GetClassName(SourceTable) %>(IDataReader reader)
		:	base(reader)
		{
		}
	}
}
